diff --git a/dom/include/dae.h b/dom/include/dae.h
index e53388b..02cf79a 100644
--- a/dom/include/dae.h
+++ b/dom/include/dae.h
@@ -98,89 +98,89 @@ public:
 
 public:
     // Database setup
-    virtual daeDatabase* getDatabase();
-    virtual daeInt setDatabase(daeDatabase* database);
+    daeDatabase* getDatabase();
+    daeInt setDatabase(daeDatabase* database);
 
     // IO Plugin setup
-    virtual daeIOPlugin* getIOPlugin();
-    virtual daeInt setIOPlugin(daeIOPlugin* plugin);
+    daeIOPlugin* getIOPlugin();
+    daeInt setIOPlugin(daeIOPlugin* plugin);
 
     // Creates a new document, returning null on failure. Cast to ColladaDOMXXX::domCOLLADA
-    virtual domCOLLADAProxy* add(const std::string& path);
+    domCOLLADAProxy* add(const std::string& path);
     // Opens an existing document, returning null on failure. Cast to ColladaDOMXXX::domCOLLADA
-    virtual domCOLLADAProxy* open(const std::string& path);
+    domCOLLADAProxy* open(const std::string& path);
     // Opens a document from memory, returning null on failure. Cast to ColladaDOMXXX::domCOLLADA
-    virtual domCOLLADAProxy* openFromMemory(const std::string& path, daeString buffer);
+    domCOLLADAProxy* openFromMemory(const std::string& path, daeString buffer);
 #ifdef COLLADA_DOM_SUPPORT141
-    virtual ColladaDOM141::domCOLLADA* add141(const std::string& path) {
+    ColladaDOM141::domCOLLADA* add141(const std::string& path) {
         return (ColladaDOM141::domCOLLADA*)add(path);
     }
-    virtual ColladaDOM141::domCOLLADA* open141(const std::string& path) {
+    ColladaDOM141::domCOLLADA* open141(const std::string& path) {
         return (ColladaDOM141::domCOLLADA*)open(path);
     }
     // Opens a document from memory, returning null on failure.
-    virtual ColladaDOM141::domCOLLADA* openFromMemory141(const std::string& path, daeString buffer) {
+    ColladaDOM141::domCOLLADA* openFromMemory141(const std::string& path, daeString buffer) {
         return (ColladaDOM141::domCOLLADA*)openFromMemory(path,buffer);
     }
 #endif
 #ifdef COLLADA_DOM_SUPPORT150
-    virtual ColladaDOM150::domCOLLADA* add150(const std::string& path) {
+    ColladaDOM150::domCOLLADA* add150(const std::string& path) {
         return (ColladaDOM150::domCOLLADA*)add(path);
     }
-    virtual ColladaDOM150::domCOLLADA* open150(const std::string& path) {
+    ColladaDOM150::domCOLLADA* open150(const std::string& path) {
         return (ColladaDOM150::domCOLLADA*)open(path);
     }
     // Opens a document from memory, returning null on failure.
-    virtual ColladaDOM150::domCOLLADA* openFromMemory150(const std::string& path, daeString buffer) {
+    ColladaDOM150::domCOLLADA* openFromMemory150(const std::string& path, daeString buffer) {
         return (ColladaDOM150::domCOLLADA*)openFromMemory(path,buffer);
     }
 #endif
 
     // Write a document to the path specified by the document's URI, returning false on failure.
-    virtual bool write(const std::string& path);
+    bool write(const std::string& path);
     // Write a document to the path specified in the second parameter, returning false on failure.
-    virtual bool writeTo(const std::string& docPath, const std::string& pathToWriteTo);
+    bool writeTo(const std::string& docPath, const std::string& pathToWriteTo);
     // Write a document to memory, returning false on failure.
-    virtual bool writeToMemory(const std::string& docPath, std::vector<char>& output);
+    bool writeToMemory(const std::string& docPath, std::vector<char>& output);
     
     // Writes all documents, returning false if any document failed to write.
-    virtual bool writeAll();
+    bool writeAll();
     // Close a specific document, unloading all memory used by the document. Returns false on failure.
-    virtual void close(const std::string& path);
+    void close(const std::string& path);
     // Remove all loaded documents. Always returns DAE_OK.
-    virtual daeInt clear();
+    daeInt clear();
 
     // Returns the total number of documents.
-    virtual int getDocCount();
+    int getDocCount();
     // Returns the i'th document .
-    virtual daeDocument* getDoc(int i);
+    daeDocument* getDoc(int i);
     // Returns a document matching the path.
-    virtual daeDocument* getDoc(const std::string& path);
+    daeDocument* getDoc(const std::string& path);
 
     // Get the root daeElement object corresponding to a particular document. Cast to ColladaDOMXXX::domCOLLADA
-    virtual domCOLLADAProxy* getRoot(const std::string& path);
+    domCOLLADAProxy* getRoot(const std::string& path);
     // Set the root daeElement object corresponding to a particular document, returning false on failure.
-    virtual bool        setRoot(const std::string& path, domCOLLADAProxy* root);
+    bool        setRoot(const std::string& path, domCOLLADAProxy* root);
 #ifdef COLLADA_DOM_SUPPORT141
-    virtual ColladaDOM141::domCOLLADA* getRoot141(const std::string& path) {
+    ColladaDOM141::domCOLLADA* getRoot141(const std::string& path) {
         return (ColladaDOM141::domCOLLADA*)getRoot(path);
     }
-    virtual bool        setRoot141(const std::string& path, ColladaDOM141::domCOLLADA* root) {
+    bool        setRoot141(const std::string& path, ColladaDOM141::domCOLLADA* root) {
         return setRoot(path,(domCOLLADAProxy*)root);
     }
 #endif
 #ifdef COLLADA_DOM_SUPPORT150
-    virtual ColladaDOM150::domCOLLADA* getRoot150(const std::string& path) {
+    ColladaDOM150::domCOLLADA* getRoot150(const std::string& path) {
         return (ColladaDOM150::domCOLLADA*)getRoot(path);
     }
-    virtual bool        setRoot150(const std::string& path, ColladaDOM150::domCOLLADA* root) {
+    bool        setRoot150(const std::string& path, ColladaDOM150::domCOLLADA* root) {
         return setRoot(path,(domCOLLADAProxy*)root);
     }
 #endif
 
     // Returns the Collada version, i.e. 1.4, 1.5, etc. Note that this _isn't_ the
     // same as the DOM version (1.3, 2.0, ...).
-    virtual daeString getDomVersion();
+    daeString getDomVersion();
 
     // Returns the (modifiable) list of atomic type objects.
     daeAtomicTypeList& getAtomicTypes();
@@ -242,33 +242,33 @@ public:
     void setCharEncoding(charEncoding encoding);
 
     // Deprecated. Alternative methods are given.
-    virtual daeInt load(daeString uri, daeString docBuffer = NULL); // Use open
-    virtual daeInt save(daeString uri, daeBool replace=true); // Use write
-    virtual daeInt save(daeUInt documentIndex, daeBool replace=true); // Use write
-    virtual daeInt saveAs(daeString uriToSaveTo, daeString docUri, daeBool replace=true); // Use writeTo
-    virtual daeInt saveAs(daeString uriToSaveTo, daeUInt documentIndex=0, daeBool replace=true); // Use writeTo
-    virtual daeInt unload(daeString uri); // Use close
-
-    virtual domCOLLADAProxy* getDom(daeString uri); // use getRoot, Cast to ColladaDOMXXX::domCOLLADA
-    virtual daeInt      setDom(daeString uri, domCOLLADAProxy* dom); // use setRoot,
+    daeInt load(daeString uri, daeString docBuffer = NULL); // Use open
+    daeInt save(daeString uri, daeBool replace=true); // Use write
+    daeInt save(daeUInt documentIndex, daeBool replace=true); // Use write
+    daeInt saveAs(daeString uriToSaveTo, daeString docUri, daeBool replace=true); // Use writeTo
+    daeInt saveAs(daeString uriToSaveTo, daeUInt documentIndex=0, daeBool replace=true); // Use writeTo
+    daeInt unload(daeString uri); // Use close
+
+    domCOLLADAProxy* getDom(daeString uri); // use getRoot, Cast to ColladaDOMXXX::domCOLLADA
+    daeInt      setDom(daeString uri, domCOLLADAProxy* dom); // use setRoot,
 #ifdef COLLADA_DOM_SUPPORT141
-    virtual ColladaDOM141::domCOLLADA* getDom141(daeString uri) {
+    ColladaDOM141::domCOLLADA* getDom141(daeString uri) {
         return (ColladaDOM141::domCOLLADA*)getDom(uri);
     }
-    virtual daeInt      setDom141(daeString uri, ColladaDOM141::domCOLLADA* dom) {
+    daeInt      setDom141(daeString uri, ColladaDOM141::domCOLLADA* dom) {
         return setDom(uri,(domCOLLADAProxy*)dom);
     }
 #endif
 #ifdef COLLADA_DOM_SUPPORT150
-    virtual ColladaDOM150::domCOLLADA* getDom150(daeString uri) {
+    ColladaDOM150::domCOLLADA* getDom150(daeString uri) {
         return (ColladaDOM150::domCOLLADA*)getDom(uri);
     }
-    virtual daeInt      setDom150(daeString uri, ColladaDOM150::domCOLLADA* dom) {
+    daeInt      setDom150(daeString uri, ColladaDOM150::domCOLLADA* dom) {
         return setDom(uri,(domCOLLADAProxy*)dom);
     }
 #endif
 
-    virtual daeString getColladaNamespace();
+    daeString getColladaNamespace();
 
 private:
     void init(daeDatabase* database, daeIOPlugin* ioPlugin, const char* specversion);
